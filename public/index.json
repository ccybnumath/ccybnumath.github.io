[{
  "name": "Research",
  "description": "",
  "body": "",
  "url": "/research/"
},{
  "name": "Resource",
  "description": "",
  "body": "",
  "url": "/resource/"
},{
  "name": "Links",
  "description": "",
  "body": "",
  "url": "/link/"
},{
  "name": "About",
  "description": "Canyi Chen | 陈灿贻 I am Canyi Chen, a doctor candidate in Renmin University of China majored in Statistics.Education  Ph.D. Statistics, Renmin University of China B.S. in Mathematics, Beijing Normal University, 2014–2018  Thesis:Advisor: Xingwei Tong",
  "body": " Canyi Chen | 陈灿贻 I am Canyi Chen, a doctor candidate in Renmin University of China majored in Statistics.Education  Ph.D. Statistics, Renmin University of China B.S. in Mathematics, Beijing Normal University, 2014–2018  Thesis:Advisor: Xingwei Tong",
  "url": "/about/"
},{
  "name": "Phpstorm integrated with XAMPP",
  "description": " Install XAMPP   Create project hello   Fix Windows Defender   Configure php  Ctrl+Alt+S prompts settings Integrate with XAMPP   hello.php&amp;lt;?php echo &amp;#34;Hello&amp;#34;; ?&amp;gt;   ",
  "body": " Install XAMPP   Create project hello   Fix Windows Defender   Configure php  Ctrl+Alt+S prompts settings Integrate with XAMPP   hello.php&amp;lt;?php echo &amp;#34;Hello&amp;#34;; ?&amp;gt;   ",
  "url": "/post/phpstorm-integrated-with-xampp/"
},{
  "name": "Chapter 10. Accessing MySQL Using PHP",
  "description": "&amp;lt;?php require_once &amp;#34;login.php&amp;#34;; $conn=new mysqli($hn,$un,$pw,$db); if($conn-&amp;gt;connect_error) die(&amp;#34;Fatal error;&amp;#34;); if(isset($_POST[&amp;#39;delete&amp;#39;])&amp;amp;&amp;amp;isset($_POST[&amp;#39;isbn&amp;#39;])) { $isbn=get_post($conn,&amp;#39;isbn&amp;#39;); $query=&amp;#34;DELETE FROM classics WHERE isbn=&amp;#39;$isbn&amp;#39;&amp;#34;; $result=$conn-&amp;gt;query($query); if(!$result) die(&amp;#34;Fatal error;&amp;#34;); } if(isset($_POST[&amp;#39;author&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;title&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;category&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;year&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;isbn&amp;#39;])) { $author=get_post($conn,&amp;#39;author&amp;#39;); $title=get_post($conn,&amp;#39;title&amp;#39;); $category=get_post($conn,&amp;#39;category&amp;#39;); $year=get_post($conn,&amp;#39;year&amp;#39;); $isbn=get_post($conn,&amp;#39;isbn&amp;#39;); $query=&amp;#34;INSERT INTO classics VALUES&amp;#34; . &amp;#34;(&amp;#39;$author&amp;#39;,&amp;#39;$title&amp;#39;,&amp;#39;$category&amp;#39;,&amp;#39;$year&amp;#39;,&amp;#39;$isbn&amp;#39;)&amp;#34;; $result=$conn-&amp;gt;query($query); if(!$result) die(&amp;#34;Fatal error.&amp;#34;); } echo &amp;lt;&amp;lt;&amp;lt; _END &amp;lt;form action=&amp;#39;sqltest.php&amp;#39; method=&amp;#39;post&amp;#39;&amp;gt;&amp;lt;pre&amp;gt; Author &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;author&amp;#39;&amp;gt; Title &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;title&amp;#39;&amp;gt; Category &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;category&amp;#39;&amp;gt; Year &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;year&amp;#39;&amp;gt; ISBN &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;isbn&amp;#39;&amp;gt; &amp;lt;input type=&amp;#39;submit&amp;#39; value=&amp;#39;ADD RECORD&amp;#39;&amp;gt; &amp;lt;/pre&amp;gt;&amp;lt;/form&amp;gt; _END; $query=&amp;#39;SELECT * FROM classics&amp;#39;; $result=$conn-&amp;gt;query($query); if(!",
  "body": "&amp;lt;?php require_once &amp;#34;login.php&amp;#34;; $conn=new mysqli($hn,$un,$pw,$db); if($conn-&amp;gt;connect_error) die(&amp;#34;Fatal error;&amp;#34;); if(isset($_POST[&amp;#39;delete&amp;#39;])&amp;amp;&amp;amp;isset($_POST[&amp;#39;isbn&amp;#39;])) { $isbn=get_post($conn,&amp;#39;isbn&amp;#39;); $query=&amp;#34;DELETE FROM classics WHERE isbn=&amp;#39;$isbn&amp;#39;&amp;#34;; $result=$conn-&amp;gt;query($query); if(!$result) die(&amp;#34;Fatal error;&amp;#34;); } if(isset($_POST[&amp;#39;author&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;title&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;category&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;year&amp;#39;])&amp;amp;&amp;amp; isset($_POST[&amp;#39;isbn&amp;#39;])) { $author=get_post($conn,&amp;#39;author&amp;#39;); $title=get_post($conn,&amp;#39;title&amp;#39;); $category=get_post($conn,&amp;#39;category&amp;#39;); $year=get_post($conn,&amp;#39;year&amp;#39;); $isbn=get_post($conn,&amp;#39;isbn&amp;#39;); $query=&amp;#34;INSERT INTO classics VALUES&amp;#34; . &amp;#34;(&amp;#39;$author&amp;#39;,&amp;#39;$title&amp;#39;,&amp;#39;$category&amp;#39;,&amp;#39;$year&amp;#39;,&amp;#39;$isbn&amp;#39;)&amp;#34;; $result=$conn-&amp;gt;query($query); if(!$result) die(&amp;#34;Fatal error.&amp;#34;); } echo &amp;lt;&amp;lt;&amp;lt; _END &amp;lt;form action=&amp;#39;sqltest.php&amp;#39; method=&amp;#39;post&amp;#39;&amp;gt;&amp;lt;pre&amp;gt; Author &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;author&amp;#39;&amp;gt; Title &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;title&amp;#39;&amp;gt; Category &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;category&amp;#39;&amp;gt; Year &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;year&amp;#39;&amp;gt; ISBN &amp;lt;input type=&amp;#39;text&amp;#39; name=&amp;#39;isbn&amp;#39;&amp;gt; &amp;lt;input type=&amp;#39;submit&amp;#39; value=&amp;#39;ADD RECORD&amp;#39;&amp;gt; &amp;lt;/pre&amp;gt;&amp;lt;/form&amp;gt; _END; $query=&amp;#39;SELECT * FROM classics&amp;#39;; $result=$conn-&amp;gt;query($query); if(!$result) die(&amp;#34;Fatal error.&amp;#34;); $rows=$result-&amp;gt;num_rows; for($j=0;$j&amp;lt;$rows;++$j) { $row=$result-&amp;gt;fetch_array(MYSQLI_NUM); $r0=htmlspecialchars($row[0]); $r1 = htmlspecialchars($row[1]); $r2 = htmlspecialchars($row[2]); $r3 = htmlspecialchars($row[3]); $r4 = htmlspecialchars($row[4]); echo &amp;lt;&amp;lt;&amp;lt; _END &amp;lt;pre&amp;gt; Author $r0 Title $r1 Category $r2 Year $r3 ISBN $r4 &amp;lt;form action=&amp;#39;sqltest.php&amp;#39; method=&amp;#39;post&amp;#39;&amp;gt; &amp;lt;input type=&amp;#39;hidden&amp;#39; name=&amp;#39;delete&amp;#39; value=&amp;#39;yes&amp;#39;&amp;gt; &amp;lt;input type=&amp;#39;hidden&amp;#39; name=&amp;#39;isbn&amp;#39; value=&amp;#39;$r4&amp;#39;&amp;gt; &amp;lt;input type=&amp;#39;submit&amp;#39; value=&amp;#39;DELETE RECORD&amp;#39;&amp;gt;&amp;lt;/form&amp;gt; _END; } $result-&amp;gt;close(); $conn-&amp;gt;close(); function get_post($conn,$var) { return $conn-&amp;gt;real_escape_string($_POST[$var]); } function mysql_entities_fix_string($conn, $string) { return htmlentities(mysql_fix_string($conn, $string)); } function mysql_fix_string($conn, $string) { if (get_magic_quotes_gpc()) $string = stripslashes($string); return $conn-&amp;gt;real_escape_string($string); } ?&amp;gt; ",
  "url": "/post/chapter-10-accessing-mysql-using-php/"
},{
  "name": "Chapter 8. Introduction to MySQL",
  "description": "Creating a MySQL Database  login with user rootsudo mysql -u root -p ; is used for ending commands  | Mysql prompt | Meaning | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | | mysql&amp;gt; | Ready and waiting for a command | | -&amp;gt; | Waiting for the next line of a command | | &amp;lsquo;&amp;gt; | | | &amp;ldquo;&amp;gt; | | | `&amp;gt; | | | /&amp;gt; | Waiting for the next line for a comment started with / |",
  "body": " Creating a MySQL Database  login with user rootsudo mysql -u root -p ; is used for ending commands  | Mysql prompt | Meaning | | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; | &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- | | mysql&amp;gt; | Ready and waiting for a command | | -&amp;gt; | Waiting for the next line of a command | | &amp;lsquo;&amp;gt; | | | &amp;ldquo;&amp;gt; | | | `&amp;gt; | | | /&amp;gt; | Waiting for the next line for a comment started with / | Canceling a command\\c  Don&amp;rsquo;t press Ctrl-C which will interrupt the program. Creating a databasemysql&amp;gt; create database publications; Query OK, 1 row affected (0.01 sec) mysql&amp;gt; USE publications; Database changed Create usersGRANT PRIVILEGES ON database.object TO &amp;#39;username&amp;#39;@&amp;#39;hostname&amp;#39; IDENTIFIED BY &amp;#39;password&amp;#39;;  mysql&amp;gt; quit Bye # chencanyi @ DESKTOP-0HHN0UG in ~ [16:30:30] $ mysql -u jim -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \\g. Your MySQL connection id is 9 Server version: 5.7.27-0ubuntu0.18.04.1 (Ubuntu) Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Type &amp;#39;help;&amp;#39; or &amp;#39;\\h&amp;#39; for help. Type &amp;#39;\\c&amp;#39; to clear the current input statement. mysql&amp;gt;  REVOKE can remove privileges once granted. Also be aware that if you create a new user but do not specify an IDENTIFIED BY clause, the user will have no password, a situation that is very insecure and should be avoided. Creating a tablemysql&amp;gt; CREATE TABLE classics( author VARCHAR(128), title VARCHAR(128), type VARCHAR(16), year CHAR(4)) ENGINE InnoDB; Query OK, 0 rows affected (0.05 sec)  Check whether your new table has been created.mysql&amp;gt; DESCRIBE classics; +--------+--------------+------+-----+---------+-------+  | Field | Type | Null | Key | Default | Extra | +--------+--------------+------+-----+---------+-------+  | author | varchar(128) | YES | | NULL | | | title | varchar(128) | YES | | NULL | | | type | varchar(16) | YES | | NULL | | | year | char(4) | YES | | NULL | | +--------+--------------+------+-----+---------+-------+  4 rows in set (0.02 sec)  alter an existing tablemysql&amp;gt; ALTER TABLE classics ADD id INT UNSIGNED NOT NULL AUTO_INCREMENT KEY; Query OK, 0 rows affected (0.06 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql&amp;gt; DESCRIBE classics; +--------+------------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +--------+------------------+------+-----+---------+----------------+ | author | varchar(128) | YES | | NULL | | | title | varchar(128) | YES | | NULL | | | type | varchar(16) | YES | | NULL | | | year | char(4) | YES | | NULL | | | id | int(10) unsigned | NO | PRI | NULL | auto_increment | +--------+------------------+------+-----+---------+----------------+ 5 rows in set (0.00 sec) Adding data to a tableINSERT INTO classics(author, title, type, year) VALUES(&amp;#39;Mark Twain&amp;#39;,&amp;#39;The Adventures of Tom Sawyer&amp;#39;,&amp;#39;Fiction&amp;#39;,&amp;#39;1876&amp;#39;); INSERT INTO classics(author, title, type, year) VALUES(&amp;#39;Jane Austen&amp;#39;,&amp;#39;Pride and Prejudice&amp;#39;,&amp;#39;Fiction&amp;#39;,&amp;#39;1811&amp;#39;); INSERT INTO classics(author, title, type, year) VALUES(&amp;#39;Charles Darwin&amp;#39;,&amp;#39;The Origin of Species&amp;#39;,&amp;#39;Non-Fiction&amp;#39;,&amp;#39;1856&amp;#39;); INSERT INTO classics(author, title, type, year) VALUES(&amp;#39;Charles Dickens&amp;#39;,&amp;#39;The Old Curiosity Shop&amp;#39;,&amp;#39;Fiction&amp;#39;,&amp;#39;1841&amp;#39;); INSERT INTO classics(author, title, type, year) VALUES(&amp;#39;William Shakespeare&amp;#39;,&amp;#39;Romeo and Juliet&amp;#39;,&amp;#39;Play&amp;#39;,&amp;#39;1594&amp;#39;);mysql&amp;gt; SELECT * FROM classics; +---------------------+------------------------------+-------------+------+----+ | author | title | type | year | id | +---------------------+------------------------------+-------------+------+----+ | Mark Twain | The Adventures of Tom Sawyer | Fiction | 1876 | 1 | | Mark Twain | The Adventures of Tom Sawyer | Fiction | 1876 | 2 | | Jane Austen | Pride and Prejudice | Fiction | 1811 | 3 | | Charles Darwin | The Origin of Species | Non-Fiction | 1856 | 4 | | Charles Dickens | The Old Curiosity Shop | Fiction | 1841 | 5 | | William Shakespeare | Romeo and Juliet | Play | 1594 | 6 | +---------------------+------------------------------+-------------+------+----+ 6 rows in set (0.00 sec) Renaming a tablemysql&amp;gt; ALTER TABLE classics RENAME pre1900; Query OK, 0 rows affected (0.01 sec) mysql&amp;gt; SELECT * FROM classics; ERROR 1146 (42S02): Table &amp;#39;publications.classics&amp;#39; doesn&amp;#39;t exist mysql&amp;gt; ALTER TABLE pre1900 RENAME classics; Query OK, 0 rows affected (0.01 sec) mysql&amp;gt; mysql&amp;gt; SELECT * FROM classics; +---------------------+------------------------------+-------------+------+----+ | author | title | type | year | id | +---------------------+------------------------------+-------------+------+----+ | Mark Twain | The Adventures of Tom Sawyer | Fiction | 1876 | 1 | | Mark Twain | The Adventures of Tom Sawyer | Fiction | 1876 | 2 | | Jane Austen | Pride and Prejudice | Fiction | 1811 | 3 | | Charles Darwin | The Origin of Species | Non-Fiction | 1856 | 4 | | Charles Dickens | The Old Curiosity Shop | Fiction | 1841 | 5 | | William Shakespeare | Romeo and Juliet | Play | 1594 | 6 | +---------------------+------------------------------+-------------+------+----+ 6 rows in set (0.00 sec) Changing the data type of a columnmysql&amp;gt; ALTER TABLE classics MODIFY year SMALLINT; Query OK, 6 rows affected (0.07 sec) Records: 6 Duplicates: 0 Warnings: 0 mysql&amp;gt; ALTER TABLE classics ADD pages SMALLINT UNSIGNED; Query OK, 0 rows affected (0.08 sec) Records: 0 Duplicates: 0 Warnings: 0 Renaming a columnmysql&amp;gt; ALTER TABLE classics CHANGE type category VARCHAR(16); Query OK, 0 rows affected (0.01 sec) Records: 0 Duplicates: 0 Warnings: 0 mysql&amp;gt; DESCRIBE classics -&amp;gt; ; +----------+----------------------+------+-----+---------+----------------+ | Field | Type | Null | Key | Default | Extra | +----------+----------------------+------+-----+---------+----------------+ | author | varchar(128) | YES | | NULL | | | title | varchar(128) | YES | | NULL | | | category | varchar(16) | YES | | NULL | | | year | smallint(6) | YES | | NULL | | | id | int(10) unsigned | NO | PRI | NULL | auto_increment | | pages | smallint(5) unsigned | YES | | NULL | | +----------+----------------------+------+-----+---------+----------------+ 6 rows in set (0.00 sec) Removing a columnmysql&amp;gt; ALTER TABLE classics DROP pages; Query OK, 0 rows affected (0.06 sec) Records: 0 Duplicates: 0 Warnings: 0 Deleting a tablemysql&amp;gt; create table disposable(trash int); Query OK, 0 rows affected (0.03 sec) mysql&amp;gt; describe disposable; +-------+---------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +-------+---------+------+-----+---------+-------+ | trash | int(11) | YES | | NULL | | +-------+---------+------+-----+---------+-------+ 1 row in set (0.00 sec) mysql&amp;gt; drop table disposable; Query OK, 0 rows affected (0.01 sec) mysql&amp;gt; show tables -&amp;gt; ; +------------------------+ | Tables_in_publications | +------------------------+ | classics | +------------------------+ 1 row in set (0.00 sec) Creating an indexmysql&amp;gt; alter table classics add index(author(20)); Query OK, 0 rows affected (0.03 sec) Records: 0 Duplicates: 0 Warnings: 0 Add primary keyALTER TABLE classics ADD isbn CHAR(13); UPDATE classics SET isbn=&amp;#39;9781598184891&amp;#39; WHERE year=&amp;#39;1876&amp;#39;; UPDATE classics SET isbn=&amp;#39;9780582506206&amp;#39; WHERE year=&amp;#39;1811&amp;#39;; UPDATE classics SET isbn=&amp;#39;9780517123201&amp;#39; WHERE year=&amp;#39;1856&amp;#39;; UPDATE classics SET isbn=&amp;#39;9780099533474&amp;#39; WHERE year=&amp;#39;1841&amp;#39;; UPDATE classics SET isbn=&amp;#39;9780192814968&amp;#39; WHERE year=&amp;#39;1594&amp;#39;; ALTER TABLE classics ADD PRIMARY KEY(isbn); DESCRIBE classics; mysql&amp;gt; DESCRIBE classics; +----------+--------------+------+-----+---------+-------+ | Field | Type | Null | Key | Default | Extra | +----------+--------------+------+-----+---------+-------+ | author | varchar(128) | YES | MUL | NULL | | | title | varchar(128) | YES | MUL | NULL | | | category | varchar(16) | YES | MUL | NULL | | | year | smallint(6) | YES | MUL | NULL | | | isbn | char(13) | NO | PRI | NULL | | +----------+--------------+------+-----+---------+-------+ 5 rows in set (0.01 sec)  ## Querying a MySQL Database piping to lesspager less; nopager; SELECTSELECT something FROM tablename;  e.g.mysql&amp;gt; select author, title from classics; +---------------------+------------------------------+  | author | title | +---------------------+------------------------------+  | Charles Dickens | The Old Curiosity Shop | | William Shakespeare | Romeo and Juliet | | Charles Darwin | The Origin of Species | | Jane Austen | Pride and Prejudice | | Mark Twain | The Adventures of Tom Sawyer | +---------------------+------------------------------+  5 rows in set (0.00 sec)  DELETEDELETE FROM classics WHERE title=&amp;#39;Little Dorrit&amp;#39;; WHEREmysql&amp;gt; select author, title from classics where author like &amp;#34;Charles%&amp;#34;; +-----------------+------------------------+ | author | title | +-----------------+------------------------+ | Charles Darwin | The Origin of Species | | Charles Dickens | The Old Curiosity Shop | +-----------------+------------------------+ 2 rows in set (0.00 sec)  This qualifier should be used with a % character before or after some text. When placed before a keyword, % means anything before. After a keyword, it means anything after. LIMITSELECT author,title FROM classics LIMIT 3; SELECT author,title FROM classics LIMIT 1,2; SELECT author,title FROM classics LIMIT 3,1;  If you pass it two parameters, the first indicates the offset from the start of the results where MySQL should start the display, and the second indicates how many to return. FULLTEXTmysql&amp;gt; alter table classics add fulltext(author,title); Query OK, 0 rows affected, 1 warning (0.35 sec) Records: 0 Duplicates: 0 Warnings: 1 MATCH &amp;hellip; AGAINSTmysql&amp;gt; select author, title from classics -&amp;gt; where match(author, title) against(&amp;#39;and&amp;#39;); +---------------------+---------------------+ | author | title | +---------------------+---------------------+ | William Shakespeare | Romeo and Juliet | | Jane Austen | Pride and Prejudice | +---------------------+---------------------+ 2 rows in set (0.02 sec)  BOOLEAN MODEmysql&amp;gt; select author,title from classics -&amp;gt; where match(author,title) -&amp;gt; against(&amp;#39;+charles -species&amp;#39; in boolean mode); +-----------------+------------------------+ | author | title | +-----------------+------------------------+ | Charles Dickens | The Old Curiosity Shop | +-----------------+------------------------+ 1 row in set (0.00 sec)  UPDATE&amp;hellip;SETmysql&amp;gt; UPDATE classics set author=&amp;#39;Mark Twain (Samuel Langhorne Clemens)&amp;#39; -&amp;gt; where author=&amp;#34;Mark Twain&amp;#34;; Query OK, 1 row affected (0.02 sec) Rows matched: 1 Changed: 1 Warnings: 0 JOINCREATE TABLE customers ( name VARCHAR(128), isbn VARCHAR(13), PRIMARY KEY (isbn)) ENGINE InnoDB; INSERT INTO customers(name,isbn) VALUES(&amp;#39;Joe Bloggs&amp;#39;,&amp;#39;9780099533474&amp;#39;); INSERT INTO customers(name,isbn) VALUES(&amp;#39;Mary Smith&amp;#39;,&amp;#39;9780582506206&amp;#39;); INSERT INTO customers(name,isbn) VALUES(&amp;#39;Jack Wilson&amp;#39;,&amp;#39;9780517123201&amp;#39;); SELECT * FROM customers;mysql&amp;gt; select name,author,title from customers,classics where customers.isbn=classics.isbn; +-------------+-----------------+------------------------+ | name | author | title | +-------------+-----------------+------------------------+ | Joe Bloggs | Charles Dickens | The Old Curiosity Shop | | Jack Wilson | Charles Darwin | The Origin of Species | | Mary Smith | Jane Austen | Pride and Prejudice | +-------------+-----------------+------------------------+ 3 rows in set (0.01 sec) mysql&amp;gt; select name,author,title from customers natural join classics; +-------------+-----------------+------------------------+ | name | author | title | +-------------+-----------------+------------------------+ | Joe Bloggs | Charles Dickens | The Old Curiosity Shop | | Jack Wilson | Charles Darwin | The Origin of Species | | Mary Smith | Jane Austen | Pride and Prejudice | +-------------+-----------------+------------------------+ 3 rows in set (0.00 sec) mysql&amp;gt; select name,author,title from customers join classics -&amp;gt; on customers.isbn=classics.isbn; +-------------+-----------------+------------------------+ | name | author | title | +-------------+-----------------+------------------------+ | Joe Bloggs | Charles Dickens | The Old Curiosity Shop | | Jack Wilson | Charles Darwin | The Origin of Species | | Mary Smith | Jane Austen | Pride and Prejudice | +-------------+-----------------+------------------------+ 3 rows in set (0.01 sec) mysql&amp;gt; select name,author,title from customers as cust, classics as class -&amp;gt; where cust.isbn=class.isbn; +-------------+-----------------+------------------------+ | name | author | title | +-------------+-----------------+------------------------+ | Joe Bloggs | Charles Dickens | The Old Curiosity Shop | | Jack Wilson | Charles Darwin | The Origin of Species | | Mary Smith | Jane Austen | Pride and Prejudice | +-------------+-----------------+------------------------+ 3 rows in set (0.00 sec)   ",
  "url": "/post/chapter-8-introduction-to-mysql/"
},{
  "name": "How to move mediawiki from Ubuntu to WSL?",
  "description": "Problem How to move mediawiki from ubuntu to wsl?Solution Prerequisite  [wikifolder]: where your wiki locate [wikidb]: database wiki uses [wikidb_user]: user of database Assuming we have two servers: Server 1[wikifolder]: /var/www/html [wikidb]: wikidb [wikidb_user]: root  Server 2[wikifolder]: /var/www/html [wikidb]: wikidb [wikidb_user]: wikiuser  php version consistency$ php --version PHP 7.0.33-10+ubuntu18.04.1+deb.sury.org+1 (cli) (built: Aug 7 2019 09:51:13) ( NTS ) Copyright (c) 1997-2017 The PHP Group Zend Engine v3.",
  "body": " Problem How to move mediawiki from ubuntu to wsl?Solution Prerequisite  [wikifolder]: where your wiki locate [wikidb]: database wiki uses [wikidb_user]: user of database Assuming we have two servers: Server 1[wikifolder]: /var/www/html [wikidb]: wikidb [wikidb_user]: root  Server 2[wikifolder]: /var/www/html [wikidb]: wikidb [wikidb_user]: wikiuser  php version consistency$ php --version PHP 7.0.33-10+ubuntu18.04.1+deb.sury.org+1 (cli) (built: Aug 7 2019 09:51:13) ( NTS ) Copyright (c) 1997-2017 The PHP Group Zend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies with Zend OPcache v7.0.33-10+ubuntu18.04.1+deb.sury.org+1, Copyright (c) 1999-2017, by Zend Technologies  Make sure your php version is compatible with Mediawiki version. Check Compatibility#PHP. Install php7.0 in Ubuntu 18.04sudo apt-get install python3-software-properties sudo add-apt-repository ppa:ondrej/php sudo apt-get install -y php7.0 sudo apt-get install php7.0-curl php7.0-dev php7.0-gd php7.0-imap php7.0-intl php7.0-mbstring php7.0-mysql php7.0-xml php7.0-zip Apache2 in WSLsudo vi /etc/apache2/apache2.conf ## Add this at the end of file # AcceptFilter http none Old mediawiki is in Server 1. We’d like to back up it, then scp to Server 2, finally restore from it in Server 2.backup database in Service 1 First insert the following line into# vi LocalSettings.php $wgReadOnly = &amp;#39;Dumping Database, Access will be restored shortly&amp;#39;; this can be removed as soon as the dump is completed.mysqldump --default-character-set=binary -u root -p -h localhost --opt wikidb &amp;gt; wikidb-backup.sql For more, See Mysqldump_from_the_command_line, and Back up in schedule.  backup website in Service 1 ## Be cautious with your mediawiki version, for the compability php&amp;amp;mysql. tar czpvf mediawiki-1.30.0-rc.0-backup.tar.gz /var/www/html Restore in Service 2  Import the database backup On the server on which you are restoring MediaWiki, ensure you have a correctly-working instance of MySQL a MySQL user with appropriate permissions, if you can’t use MySQL user rootmkdir mediawiki_backup &amp;amp;&amp;amp; cd mediawiki_backup/ cp /mnt/c/Users/chencanyi/Videos/wikidb-backup.sql ~/mediawiki_backup/ # or you can use scp  If a database exists and you want to entirely replace it from the backup. To destroy the database:mysqladmin -u wikiuser -p drop wikidb Then to create a new database and restore from backup:# Create mysql user wikiuser sudo mysql -u root -p mysql&amp;gt; GRANT ALL PRIVILEGES ON *.* TO wikiuser@localhost IDENTIFIED BY &amp;#34;2010.ccy&amp;#34;; mysqladmin -u wikiuser -p create wikidb mysql -u wikiuser -p wikidb &amp;lt; wikidb-backup.sql Import the MediaWiki files Assuming you are in Service 1.scp ubuntu@Service1:~/mediawiki_backup/mediawiki-1.30.0-rc.0-backup.tar.gz ~/mediawiki_backup/ cd ~/mediawiki_backup/ tar -xvzf mediawiki-1.30.0-rc.0-backup.tar.gz rm -fR [wikifolder]/ mv ./var/www/html/* [wikifolder] Remember to change the database settings in LocalSettings.php(such as wgDBname, wgDBuser, wgDBpasswd).php /var/www/html/maintenance/update.php Restart apache2 &amp;amp; mysqlsudo service apache2 restart sudo service mysql restart Check the configuration file IP  Something more  where to find database configure?cd /var/www/html vi LocalSettings.php ## Something like ## Database settings $wgDBtype = &amp;#34;mysql&amp;#34;; $wgDBserver = &amp;#34;localhost&amp;#34;; $wgDBname = &amp;#34;wikidb&amp;#34;; $wgDBuser = &amp;#34;root&amp;#34;; $wgDBpassword = &amp;#34;2010.ccy&amp;#34;; Backing up a website in short is backing up web files and database.References https://m.mediawiki.org/wiki/Special:MyLanguage/Manual:Moving_a_wiki https://blog.lilydjwg.me/2011/5/28/story-of-migrating-mediawiki.27048.html Manual:Restoring a wiki from backup Manual:Backing up a wiki https://blog.csdn.net/setoy/article/details/6562287 一文彻底解决Ubuntu上PHP的安装以及版本切换 Compatibility#PHP Ubuntu18.04 安装MySQL Failed to enable APR_TCP_DEFER_ACCEPT  ",
  "url": "/post/how-to-move-mediawiki-from-ubuntu-to-wsl/"
},{
  "name": "Install Hugo & Theme Midnight",
  "description": " Mainly follow quick-start. Installmentsudo apt-get update sudo apt-get install hugo hugo version # check version hugo new site www.chencanyi.cn cd www.chencanyi.cn git init git submodule add https://gitlab.com/BluestNight/Midnight.git themes/Midnight cp themes/Midnight/exampleS ite/config.toml . -f Add some content(Optional)hugo new posts/my-first-post.md Start serverhugo server -D References https://bluestnight.com/guides/midnight/getting-started/ https://themes.gohugo.io/theme/Midnight/ https://gohugo.io/getting-started/quick-start/  ",
  "body": " Mainly follow quick-start. Installmentsudo apt-get update sudo apt-get install hugo hugo version # check version hugo new site www.chencanyi.cn cd www.chencanyi.cn git init git submodule add https://gitlab.com/BluestNight/Midnight.git themes/Midnight cp themes/Midnight/exampleS ite/config.toml . -f Add some content(Optional)hugo new posts/my-first-post.md Start serverhugo server -D References https://bluestnight.com/guides/midnight/getting-started/ https://themes.gohugo.io/theme/Midnight/ https://gohugo.io/getting-started/quick-start/  ",
  "url": "/post/install-hugo-theme-midnight-https-bluestnight-com-guides-midnight-getting-started/"
},{
  "name": "Hosting source code and generating static pages in Github",
  "description": " ##References ",
  "body": " ##References ",
  "url": "/post/blog-integrated-with-blogdown-hugo-rstudio-and-github-seamlessly/"
},{
  "name": "Prefix bash code with $ using `awk`",
  "description": " Problem We plan to prefix $ before bash code block.Solution Use awk in bash line to progress strings.# .zshrc alias bashcode=Bashcode function Bashcode(){ history | awk &amp;#39;{print &amp;#34;$ &amp;#34; $2}&amp;#39; } References  http://www.ruanyifeng.com/blog/2018/11/awk.html https://gregable.com/2010/09/why-you-should-know-just-little-awk.html  ",
  "body": " Problem We plan to prefix $ before bash code block.Solution Use awk in bash line to progress strings.# .zshrc alias bashcode=Bashcode function Bashcode(){ history | awk &amp;#39;{print &amp;#34;$ &amp;#34; $2}&amp;#39; } References  http://www.ruanyifeng.com/blog/2018/11/awk.html https://gregable.com/2010/09/why-you-should-know-just-little-awk.html  ",
  "url": "/post/prefix-bash-code-with-using-awk/"
},{
  "name": "11The Environment",
  "description": "printenv set export alias As we discussed earlier, the shell maintains a body of information during our shell session called the environment. Data stored in the environment is used by programs to determine facts about the system&amp;rsquo;s configuration.What Is Stored In The Environment? sheel variables environment variables aliases shell functionsExaming The Environment printenv and setprintenv | less printenv USER set | less echo $USER alias",
  "body": "  printenv set export alias As we discussed earlier, the shell maintains a body of information during our shell session called the environment. Data stored in the environment is used by programs to determine facts about the system&amp;rsquo;s configuration.What Is Stored In The Environment? sheel variables environment variables aliases shell functionsExaming The Environment printenv and setprintenv | less printenv USER set | less echo $USER aliasHow is the environment established? When we log on to the system, the bash program starts, and reads a series of configuration scripts called startup files, which define the default environment shared by all users. This is followed by more startup files in our home directory that define our personal environment. Startup Files For Login Shell Sessions /etc/profile ~/.bash_profile ~/.bash_login ~/.profile  For non-Login Shell Sessions /etc/bash.bashrc ~/.bashrcchencanyi@DESKTOP-0HHN0UG:~$ foo=&amp;#34;This is some &amp;#34; chencanyi@DESKTOP-0HHN0UG:~$ echo $foo This is some chencanyi@DESKTOP-0HHN0UG:~$ foo=$foo&amp;#34;text&amp;#34; chencanyi@DESKTOP-0HHN0UG:~$ echo $foo This is some text Modifying the environment  As a general rule, to add directories to your PATH, or define additional environment variables, place those changes in .bash_profile (or equivalent, according to your distribution. For example, Ubuntu uses .profile). For everything else, place the changes in .bashrc create a backupcp .bashrc .bashrc.bak  ",
  "url": "/post/11the-environment/"
},{
  "name": "Hello R Markdown",
  "description": "R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.You can embed an R code chunk like this:summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.",
  "body": "R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.You can embed an R code chunk like this:summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00fit &amp;lt;- lm(dist ~ speed, data = cars)fit## ## Call:## lm(formula = dist ~ speed, data = cars)## ## Coefficients:## (Intercept) speed ## -17.579 3.932Including PlotsYou can also embed plots. See Figure 1 for example:par(mar = c(0, 1, 0, 1))pie(c(280, 60, 20),c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),init.angle = -50, border = NA)Figure 1: A fancy pie chart.",
  "url": "/post/2015-07-23-r-rmarkdown/"
},{
  "name": "(Hu)go Template Primer",
  "description": "Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.This document is a brief primer on using Go templates.",
  "body": " Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.This document is a brief primer on using Go templates. The Go docs provide more details.Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.A unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.Basic Syntax Golang templates are HTML files with the addition of variables and functions.Go variables and functions are accessible within {{ }}Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:{{ foo }}  Parameters are separated using spacesCalling the add function with input of 1, 2:{{ add 1 2 }}  Methods and fields are accessed via dot notationAccessing the Page Parameter &amp;ldquo;bar&amp;rdquo;{{ .Params.bar }}  Parentheses can be used to group items together{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}  Variables Each Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.A variable is accessed by referencing the variable name.&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;  Variables can also be defined and referenced.{{ $address := &amp;quot;123 Main St.&amp;quot;}} {{ $address }}  Functions Go template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.Example:{{ add 1 2 }}  Includes When including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.Example:{{ template &amp;quot;chrome/header.html&amp;quot; . }}  Logic Go templates provide the most basic iteration and conditional logic.Iteration Just like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.Example 1: Using Context{{ range array }} {{ . }} {{ end }}  Example 2: Declaring value variable name{{range $element := array}} {{ $element }} {{ end }}  Example 2: Declaring key and value variable name{{range $index, $element := array}} {{ $index }} {{ $element }} {{ end }}  Conditionals If, else, with, or, &amp;amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.Go Templates treat the following values as false: false 0 any array, slice, map, or string of length zero  Example 1: If{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}  Example 2: If -&amp;gt; Else{{ if isset .Params &amp;quot;alt&amp;quot; }} {{ index .Params &amp;quot;alt&amp;quot; }} {{else}} {{ index .Params &amp;quot;caption&amp;quot; }} {{ end }}  Example 3: And &amp;amp; Or{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}  Example 4: WithAn alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.The first example above could be simplified as:{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}  Example 5: If -&amp;gt; Else If{{ if isset .Params &amp;quot;alt&amp;quot; }} {{ index .Params &amp;quot;alt&amp;quot; }} {{ else if isset .Params &amp;quot;caption&amp;quot; }} {{ index .Params &amp;quot;caption&amp;quot; }} {{ end }}  Pipes One of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the input of the following pipe.Because of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.A few simple examples should help convey how to use the pipe.Example 1 :{{ if eq 1 1 }} Same {{ end }}  is the same as{{ eq 1 1 | if }} Same {{ end }}  It does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.Example 2 :{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}  Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.Example 3 :{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}} Stuff Here {{ end }}  Could be rewritten as{{ isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }} Stuff Here {{ end }}  Context (aka. the dot) The most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.Example: {{ $title := .Site.Title }} {{ range .Params.tags }} &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt; {{ end }}  Notice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.Hugo Parameters Hugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.Using Content (page) Parameters In each piece of content you can provide variables to be used by the templates. This happens in the front matter.An example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.Here is the example front matter:--- title: &amp;quot;Permalinks&amp;quot; date: &amp;quot;2013-11-18&amp;quot; aliases: - &amp;quot;/doc/permalinks/&amp;quot; groups: [&amp;quot;extras&amp;quot;] groups_weight: 30 notoc: true ---  Here is the corresponding code inside of the template: {{ if not .Params.notoc }} &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt; {{ .TableOfContents }} &amp;lt;/div&amp;gt; {{ end }}  Using Site (config) Parameters In your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.For instance, you might declare:params:CopyrightHTML:&amp;#34;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;#34;TwitterUser:&amp;#34;spf13&amp;#34;SidebarRecentLimit:5 Within a footer layout, you might then declare a &amp;lt;footer&amp;gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt; &amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt; &amp;lt;/footer&amp;gt;{{end}}  An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot; alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/span&amp;gt;{{end}}  Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do so, such as in this example:&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt; &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt; &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}} &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; {{end}}&amp;lt;/ul&amp;gt; &amp;lt;/nav&amp;gt;  ",
  "url": "/post/goisforlovers/"
},{
  "name": "Getting Started with Hugo",
  "description": "Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.Save it somewhere specific as we will be using it in the next step.More complete instructions are available at Install HugoStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.Follow the following steps: Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:",
  "body": " Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.Save it somewhere specific as we will be using it in the next step.More complete instructions are available at Install HugoStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.Follow the following steps: Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:git clone https://github.com/spf13/hugo cd hugo /path/to/where/you/installed/hugo server --source=./docs &amp;gt; 29 pages created &amp;gt; 0 tags index created &amp;gt; in 27 ms &amp;gt; Web Server is available at http://localhost:1313 &amp;gt; Press ctrl+c to stop  Once you&amp;rsquo;ve gotten here, follow along the rest of this page on your local build.Step 3. Change the docs site Stop the Hugo process by hitting Ctrl+C.Now we are going to run hugo again, but this time with hugo in watch mode./path/to/hugo/from/step/1/hugo server --source=./docs --watch &amp;gt; 29 pages created &amp;gt; 0 tags index created &amp;gt; in 27 ms &amp;gt; Web Server is available at http://localhost:1313 &amp;gt; Watching for changes in /Users/spf13/Code/hugo/docs/content &amp;gt; Press ctrl+c to stop  Open your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.Content files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.Change and save this file.. Notice what happened in your terminal.&amp;gt; Change detected, rebuilding site &amp;gt; 29 pages created &amp;gt; 0 tags index created &amp;gt; in 26 ms  Refresh the browser and observe that the typo is now fixed.Notice how quick that was. Try to refresh the site before it&amp;rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.Step 4. Have fun The best way to learn something is to play with it.",
  "url": "/post/hugoisforlovers/"
},{
  "name": "Migrate to Hugo from Jekyll",
  "description": "Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.",
  "body": " Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.Create your Hugo configuration file Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.Set your configuration publish folder to _site The default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you&amp;rsquo;ll want to do one of two alternatives: Change your submodule to point to map gh-pages to public instead of _site (recommended).git submodule deinit _site git rm _site git submodule add -b gh-pages git@github.com:your-username/your-repo.git public  Or, change the Hugo configuration to use _site instead of public.{ .. &amp;quot;publishdir&amp;quot;: &amp;quot;_site&amp;quot;, .. }   Convert Jekyll templates to Hugo templates That&amp;rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll&amp;rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo&amp;rsquo;s template to learn Hugo&amp;rsquo;s way.As a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.Convert Jekyll plugins to Hugo shortcodes Jekyll has plugins; Hugo has shortcodes. It&amp;rsquo;s fairly trivial to do a port.Implementation As an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.Jekyll&amp;rsquo;s plugin:module Jekyll class ImageTag &amp;lt; Liquid::Tag @url = nil @caption = nil @class = nil @link = nil // Patterns IMAGE_URL_WITH_CLASS_AND_CAPTION = IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)&amp;quot;(.*?)&amp;quot;(\\s+)-&amp;gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i IMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)&amp;quot;(.*?)&amp;quot;/i IMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i IMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i def initialize(tag_name, markup, tokens) super if markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK @class = $1 @url = $3 @caption = $7 @link = $9 elsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION @class = $1 @url = $3 @caption = $7 elsif markup =~ IMAGE_URL_WITH_CAPTION @url = $1 @caption = $5 elsif markup =~ IMAGE_URL_WITH_CLASS @class = $1 @url = $3 elsif markup =~ IMAGE_URL @url = $1 end end def render(context) if @class source = &amp;quot;&amp;lt;figure class=&#39;#{@class}&#39;&amp;gt;&amp;quot; else source = &amp;quot;&amp;lt;figure&amp;gt;&amp;quot; end if @link source += &amp;quot;&amp;lt;a href=\\&amp;quot;#{@link}\\&amp;quot;&amp;gt;&amp;quot; end source += &amp;quot;&amp;lt;img src=\\&amp;quot;#{@url}\\&amp;quot;&amp;gt;&amp;quot; if @link source += &amp;quot;&amp;lt;/a&amp;gt;&amp;quot; end source += &amp;quot;&amp;lt;figcaption&amp;gt;#{@caption}&amp;lt;/figcaption&amp;gt;&amp;quot; if @caption source += &amp;quot;&amp;lt;/figure&amp;gt;&amp;quot; source end end end Liquid::Template.register_tag(&#39;image&#39;, Jekyll::ImageTag)  is written as this Hugo shortcode:&amp;lt;!-- image --&amp;gt; &amp;lt;figure {{ with .Get &amp;quot;class&amp;quot; }}class=&amp;quot;{{.}}&amp;quot;{{ end }}&amp;gt; {{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }} &amp;lt;img src=&amp;quot;{{ .Get &amp;quot;src&amp;quot; }}&amp;quot; {{ if or (.Get &amp;quot;alt&amp;quot;) (.Get &amp;quot;caption&amp;quot;) }}alt=&amp;quot;{{ with .Get &amp;quot;alt&amp;quot;}}{{.}}{{else}}{{ .Get &amp;quot;caption&amp;quot; }}{{ end }}&amp;quot;{{ end }} /&amp;gt; {{ if .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }} {{ if or (or (.Get &amp;quot;title&amp;quot;) (.Get &amp;quot;caption&amp;quot;)) (.Get &amp;quot;attr&amp;quot;)}} &amp;lt;figcaption&amp;gt;{{ if isset .Params &amp;quot;title&amp;quot; }} {{ .Get &amp;quot;title&amp;quot; }}{{ end }} {{ if or (.Get &amp;quot;caption&amp;quot;) (.Get &amp;quot;attr&amp;quot;)}}&amp;lt;p&amp;gt; {{ .Get &amp;quot;caption&amp;quot; }} {{ with .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt; {{ end }} {{ .Get &amp;quot;attr&amp;quot; }} {{ if .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;/a&amp;gt; {{ end }} &amp;lt;/p&amp;gt; {{ end }} &amp;lt;/figcaption&amp;gt; {{ end }} &amp;lt;/figure&amp;gt; &amp;lt;!-- image --&amp;gt;  Usage I simply changed:{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were &amp;quot;having fun&amp;quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; -&amp;gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}  to this (this example uses a slightly extended version named fig, different than the built-in figure):{{% fig class=&amp;quot;full&amp;quot; src=&amp;quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&amp;quot; title=&amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; link=&amp;quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&amp;quot; %}}  As a bonus, the shortcode named parameters are, arguably, more readable.Finishing touches Fix content Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.Clean up You&amp;rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn&amp;rsquo;t used, delete it.A practical example in a diff Hey, it&amp;rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.",
  "url": "/post/migrate-from-jekyll/"
},{
  "name": "",
  "description": "",
  "body": "",
  "url": "/post/test/"
}
]

<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Canyi Chen</title>
    <link>/post/</link>
    <description>Recent content in Posts on Canyi Chen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Install Hugo &amp; Theme Midnight</title>
      <link>/post/install-hugo-theme-midnight-https-bluestnight-com-guides-midnight-getting-started/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/install-hugo-theme-midnight-https-bluestnight-com-guides-midnight-getting-started/</guid>
      <description> Mainly follow quick-start.
 Installment
sudo apt-get update sudo apt-get install hugo hugo version # check version hugo new site www.chencanyi.cn cd www.chencanyi.cn git init git submodule add https://gitlab.com/BluestNight/Midnight.git themes/Midnight cp themes/Midnight/exampleS ite/config.toml . -f Add some content(Optional)
hugo new posts/my-first-post.md Start server
hugo server -D References https://bluestnight.com/guides/midnight/getting-started/
 https://themes.gohugo.io/theme/Midnight/
 https://gohugo.io/getting-started/quick-start/
  </description>
    </item>
    
    <item>
      <title>Git basics</title>
      <link>/post/git-basics/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/git-basics/</guid>
      <description>A great and easy understanding introduction to git. Here are just my notes.
 force pushing
git push -u origin master -f Create new branch
git checkout -b src switch branch
git checkout src Branch src has already existed.
 show all branches
git branch show commitment history
git log git log --graph Display with less
 Roll back
# roll back one step git reset --hard HEAD~1 git add .</description>
    </item>
    
    <item>
      <title>Hosting source code and generating static pages in Github</title>
      <link>/post/blog-integrated-with-blogdown-hugo-rstudio-and-github-seamlessly/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/blog-integrated-with-blogdown-hugo-rstudio-and-github-seamlessly/</guid>
      <description> ##
References </description>
    </item>
    
    <item>
      <title>Prefix bash code with $ using `awk`</title>
      <link>/post/prefix-bash-code-with-using-awk/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/prefix-bash-code-with-using-awk/</guid>
      <description> Problem We plan to prefix $ before bash code block.
Solution Use awk in bash line to progress strings.
# .zshrc alias bashcode=Bashcode function Bashcode(){ history | awk &amp;#39;{print &amp;#34;$ &amp;#34; $2}&amp;#39; } References  http://www.ruanyifeng.com/blog/2018/11/awk.html https://gregable.com/2010/09/why-you-should-know-just-little-awk.html  </description>
    </item>
    
    <item>
      <title>11The Environment</title>
      <link>/post/11the-environment/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/11the-environment/</guid>
      <description>printenv set export alias As we discussed earlier, the shell maintains a body of information during our shell session called the environment. Data stored in the environment is used by programs to determine facts about the system&amp;rsquo;s configuration.
What Is Stored In The Environment? sheel variables
 environment variables
 aliases
 shell functions
Examing The Environment printenv and set
printenv | less printenv USER set | less echo $USER alias</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>